akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    log-config-on-start = off
    log-dead-letters = on
    log-dead-letters-during-shutdown = off

    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        serialize-creators = on
        serialize-messages = on

        serializers {
            java = "akka.serialization.JavaSerializer"
            proto = "akka.remote.serialization.ProtobufSerializer"
            jackson = "com.lastmile.scs.common.akka.codec.JackonSerializer"
        }
        serialization-bindings {
            "java.io.Serializable" = java
            "com.google.protobuf.Message" = proto
            "com.lastmile.scs.common.akka.codec.JacksonSerializable" = jackson
        }
        debug {
            receive = on
            autoreceive = on
            unhandled = on
        }
    }

    remote {
        enabled-transports = ["akka.remote.netty.ssl"]
        netty.ssl {
          hostname = "127.0.0.1" 
          port = 2551
          enable-ssl = true
        }

        netty.ssl.security {
          key-store = "src/test/resources/security/keystore.jks"
          trust-store = "src/test/resources/security/trust.truststore"
          key-store-password = "changeit"
          key-password = "changeit"
          trust-store-password = "changeit"
          protocol = "TLSv1"
          random-number-generator = "AES128CounterSecureRNG"
          enabled-algorithms = [TLS_RSA_WITH_AES_128_CBC_SHA]
        }
        
        transport-failure-detector {
            acceptable-heartbeat-pause = 20 s
            heartbeat-interval = 5 s
        }

        log-remote-lifecycle-events = on
    }
 
    cluster {
        seed-nodes = [
            "akka.ssl.tcp://ordering@127.0.0.1:2551"
        ]
        auto-down-unreachable-after = 10s
    }

    persistence {
        journal.plugin="akka.persistence.testJournal"

        testJournal {
            class = "com.lastmile.scs.common.akka.persistence.InMemoryAsyncWriteJournal"
            plugin-dispatcher = "akka.actor.default-dispatcher"
            max-message-batch-size = 1
        }
    }

    extensions = ["akka.camel.CamelExtension","akka.contrib.pattern.DistributedPubSubExtension","com.lastmile.scs.common.akka.ext.GuiceExtension"] 
}